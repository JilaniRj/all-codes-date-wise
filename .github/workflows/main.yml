name: CI/CD Pipeline  # Name of the GitHub Actions workflow
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  validate-code:  # Job to validate code changes
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository  # Checkout the code repository
      uses: actions/checkout@v2
    - name: Set up Python  # Set up Python environment
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install dependencies  # Install linting tool (flake8)
      run: pip install flake8
    - name: Run linting  # Run linting on the code
      run: flake8 .
  run-tests:  # Job to trigger tests on code commits
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository  # Checkout the code repository
      uses: actions/checkout@v2
    - name: Set up Python  # Set up Python environment
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install dependencies  # Install project dependencies
      run: pip install -r requirements.txt
    - name: Run tests  # Run tests using pytest
      run: pytest
  build-docker:  # Job to build Docker artifacts
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository  # Checkout the code repository
      uses: actions/checkout@v2
    - name: Set up Python and Docker  # Set up Python and Docker environments
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install dependencies and build Docker image  # Install project dependencies and build Docker image
      run: |
        pip install -r requirements.txt
        docker build -t your-image-name .
  notify-tl:  # Job to notify team lead for confirmation
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository  # Checkout the code repository
      uses: actions/checkout@v2
    - name: Notify TL  # Notify team lead with a comment in the pull request
      uses: actions/github-script@v5
      with:
        script: |
          const message = 'Please check and confirm the CI/CD setup.';
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message,
          });
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:  # Job to deploy/update pipelines automatically
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository  # Checkout the code repository
      uses: actions/checkout@v2
    - name: Deploy to Production  # Execute deployment script (adjust as needed)
      run: ./deploy.sh
